/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["all"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        Pageable: {
            /** Format: int32 */
            page?: number;
            /** Format: int32 */
            size?: number;
            sort?: string[];
        };
        GrantedAuthority: {
            authority?: string;
        };
        PageMetadata: {
            /** Format: int64 */
            size?: number;
            /** Format: int64 */
            number?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int64 */
            totalPages?: number;
        };
        PagedModelUser: {
            content?: components["schemas"]["User"][];
            page?: components["schemas"]["PageMetadata"];
        };
        User: {
            /** Format: int32 */
            id?: number;
            username?: string;
            password?: string;
            name?: string;
            surname?: string;
            patronymic?: string;
            isActive?: boolean;
            roles?: string;
            authorities?: components["schemas"]["GrantedAuthority"][];
            enabled?: boolean;
            accountNonLocked?: boolean;
            accountNonExpired?: boolean;
            credentialsNonExpired?: boolean;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    all: {
        parameters: {
            query?: {
                pageable?: components["schemas"]["Pageable"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "*/*": components["schemas"]["PagedModelUser"];
                };
            };
        };
    };
}
